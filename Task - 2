-- Step 1: Create Database
CREATE DATABASE IF NOT EXISTS StudentCourseDB;
USE StudentCourseDB;

-- Step 2: Create Tables

-- Create Students Table
CREATE TABLE IF NOT EXISTS Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

-- Create Courses Table
CREATE TABLE IF NOT EXISTS Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(255) NOT NULL,
    course_description TEXT
);

-- Create Enrolments Table
CREATE TABLE IF NOT EXISTS Enrolments (
    enrolment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    enrolment_date DATE,
    FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES Courses(course_id) ON DELETE CASCADE
);

-- Step 3: Insert Sample Data

-- Insert Students
INSERT INTO Students (student_id, name, email) VALUES
(101, 'Alice Johnson', 'alice@example.com'),
(102, 'Bob Smith', 'bob@example.com'),
(103, 'Charlie Brown', 'charlie@example.com');

-- Insert Courses
INSERT INTO Courses (course_id, course_name, course_description) VALUES
(1, 'Data Structures', 'Learn about data structures in depth'),
(2, 'Database Management', 'SQL and NoSQL databases'),
(3, 'Machine Learning', 'Introduction to ML concepts'),
(4, 'Cyber Security', 'Basics of cyber security and ethical hacking');

-- Insert Enrolments
INSERT INTO Enrolments (enrolment_id, student_id, course_id, enrolment_date) VALUES
(1, 101, 1, '2024-01-10'),
(2, 102, 1, '2024-01-12'),
(3, 101, 2, '2024-02-05'),
(4, 103, 3, '2024-03-15'),
(5, 102, 3, '2024-03-18');

-- Step 4: Queries for Tasks

-- Task 1: List all students and the courses they are enrolled in
SELECT S.name AS student_name, C.course_name
FROM Students S
INNER JOIN Enrolments E ON S.student_id = E.student_id
INNER JOIN Courses C ON E.course_id = C.course_id;

-- Task 2: Find the number of students enrolled in each course
SELECT C.course_id, C.course_name, COUNT(E.student_id) AS total_students
FROM Courses C
LEFT JOIN Enrolments E ON C.course_id = E.course_id
GROUP BY C.course_id, C.course_name;

-- Task 3: List students who have enrolled in more than one course
SELECT S.student_id, S.name, COUNT(E.course_id) AS course_count
FROM Students S
INNER JOIN Enrolments E ON S.student_id = E.student

SELECT C.course_id, C.course_name
FROM Courses C
LEFT JOIN Enrolments E ON C.course_id = E.course_id
WHERE E.enrolment_id IS NULL;
